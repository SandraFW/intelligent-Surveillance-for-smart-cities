\documentclass[12pt]{article}
\usepackage{graphicx}
\usepackage[utf8]{inputenc}
\usepackage{makecell}
\usepackage[margin=0.7in]{geometry}
\usepackage[T1]{fontenc}
\usepackage{mathptmx}
\usepackage[normalem]{ulem}

\renewcommand\theadalign{bc}
\renewcommand\theadfont{\bfseries}
\renewcommand\theadgape{\Gape[4pt]}
\renewcommand\cellgape{\Gape[4pt]}

\usepackage[
backend=biber,
style=numeric,
sorting=ynt
]{biblatex}

\addbibresource{References.bib}

%opening
\title{Software Proposal Document for project
\newline Intelligent Surveillance for smart cities}
\author{Mariam Hesham,Nour Ahmed ,Samiha Hesham,Sandra Fares}

\begin{document}
\maketitle
\begin{table}[htp]

\begin{tabular}{|l|l|l|}
\hline 
\thead{Proposal Version}    & \thead{Date} & \thead{Reason for Change}  \\ \hline
1.0 & 24-October-2020   & \makecell{Proposal First version’s specifications are defined}   \\ \hline

\end{tabular}
\caption{Document version history}
\end{table}

\begin{table}[htp]
\begin{tabular}{cc}
\thead{GitHub:}    & {https://github.com/SandraFW/intelligent-Surveillance-for-smart-cities}   
\end{tabular}
\end{table}


\begin{abstract}
Surveillance systems are of vital importance for the development of smart cities. These systems can be considered vision organs of such cities. It is expected that a huge amount of data (Big Data) will be generated in smart cities. Therefore, to ensure the safety of its citizens, it is important to provide an efficient and real-time analysis of these data to get real-time responses, when catastrophic events occur. Accordingly, transmitting this massive data to the cloud, to be processed, is relatively slow. Therefore, the purpose of this project is to implement an edge computing- based surveillance system to offer real-time data processing. When surveillance videos capture an incident, the data get transferred to the edge for processing. Moreover, a rapid response is then provided to properly handle the occasion. Furthermore, despite tackling scalability obstacles, the system should handle privacy-sensitive data to overcome the privacy challenges in smart cities.
\end{abstract}

\section{Introduction}

\subsection{Background}
The video surveillance system is a crucial component in the development of Smart Cities where they are useful for crime prevention, terrorist or forensic evidence detection, and traffic monitoring but the old traditional surveillance cannot accomplish it that's why smart surveillance systems with smart detection modules were introduced and always in enhancements till now.
 
\cite{1}However, implementing a citywide smart video surveillance system involves many challenges. A large number of cameras have to be deployed across the city, producing huge amounts of data and information every day.Besides, storing and enabling access to video devices and data at this large scale, in both real-time and on-demand manner, demand more computing and storage resources than traditional video surveillance systems. These challenges have to be addressed to maximize the effectiveness of smart video surveillance. 

Cloud computing was proposed then to solve some of those issues as mentioned in \cite{2} and \cite{3}, and it proved to be efficient but with the growth of data, it could not accomplish the desired results, and fast response due to the possible delay of transmitting the data to and from the cloud server, and also it could not solve the privacy and security concerns. So The term Fog Computing and video summarising were introduced .
\subsection{Motivation}
\subsubsection{Academic}
Since smart cities utilize IoT devices in recent times, in order to improve their infrastructure, numerous amounts of data get generated at a rapid rate. Passing data to the cloud is unfavorable when dealing with surveillance systems, as these systems require urgent and  instant responses to avoid misfortune events. Therefore, it is necessary to procure a strategy that will assist in managing and processing data effectively in a short period of time. Edge computing is a recently proposed solution for this problem. Instead of transferring data to the cloud, it gets transferred to the edge for real-time data processing. Various techniques are used to exploit this new technology and use it efficiently to solve different barriers. B. V. Natesha and Ram Mohana Reddy Guddeti \cite{nateshafog} proposed a fog computing based surveillance system, for smart cities, that processes data using deep learning methods in order to provide low latency and minimize the cost of the services. Likewise, G. Baldoni et al. \cite{baldoni2017dynamic} present edge computing to reduce the network traffic and offer scalability.
\subsubsection{Business}
With the expansion of IoT devices in smart cities, there are a massive amount of data generated from the cameras. Edge-based surveillance system provides the business and the organizations with significant benefits. It provides real time data processing analysis which help the organizations to take a proper action and make immediate decision efficiently in case of any accident or abnormal events. Furthermore, The huge organizations as the smart cities need to keep their information and their citizens data secure .Edge computing provides the system with security and privacy while working on a lower bandwidth. Moreover, Edge computing needs limited storage in order to keep the data.so, there is no need for a central server for action taking. Therefore it provides the business and the organizations with lower costs.
\subsection{Problem Statement}
One of the challenges that face a surveillance systems in smart cities is Big data, as the smart city involves huge amount of cameras in 24/7 mode to cover the whole city. Each camera records a massive amount of video and audio data to be processed. To handle such a massive data, it is essential to provide a way to get real-time data processing analysis efficiently. Cloud computing has been utilized to perform data processing analysis leading to slower performance. Therefore, edge computing is essential for real-time data processing analysis with high performance and low latency.
\section{Project Description}
List initial project requirements. A good requirement states something that is \textbf{necessary}, \textbf{verifiable}, and \textbf{attainable}. Even if it is verifiable and attainable if it is not necessary, it is not a good requirement \cite{hooks1994writing}.
\\
\\Show down with a figure the proposed system.

\subsection{Objectives}


\begin{itemize}

\item Fog computing-based framework using  video summarization for surveillance data.
\item We will improve an algorithm for anomaly detection in surveillance video with remarkable stability and accuracy.
\item We will work on enhancing the latency by reducing the amount of data.

\item We will work on enhancing the Privacy protection scheme for data security in surveillance video.

\end{itemize}
\subsection{Scope}
\begin{itemize}
\item The system will work in 24/7 mode to control the city during the whole day.
\item The system will provide real time data processing analysis.
\item The system will detect any accident or abnormal event efficiently.
\item The system will response immediately and take a proper action when an event is detected.
\item The system will provide privacy assurance for the citizens.
\item The system will provide scalability with unlimited storage.
\end{itemize}
\subsection{Project Overview}
Some extra details for your system implementations.
\subsection{Stakeholder}
\subsubsection{Internal}
The development team members are:
\begin{itemize}
\item Nour Ahmed (team leader)
\item Mariam Hesham
\item Sandra Fares
\item Samiha Hesham
\end{itemize}
\subsubsection{External}
"Ministry of communication, government companies,smart cities and grand city shopping centers" where they need our system to monitor their places 24/7 with unlimited storage.Also detecting any abnormal activity efficiently.

\section{Similar System}
\subsection{Academic}
\begin{itemize}
\item Jianyu Wang et al. \cite{wang2017elastic} designed fog computing architecture for urban surveillance systems to provide low latency and decrease the workload of cloud centers. The authors implemented Network Functions Virtualization and Software-Defined Networking on the cloud computing platform OpenStack, resulting in a real-time video processing system. Experimental results are promising. They show that the system can be developed on a larger scale and that fog computing can be potentially used for smart urban surveillance systems. 

\item In the hopes of exploiting fog computing and tackling the cost challenges faced when building surveillance systems, Mansoor Nasir et al \cite{nasir2019fog} presented a cost-effective fog computing based surveillance system. The system does not only reduce the energy consumed and the bandwidth, but also reduces the cost. The authors proposed a video summarization technique to reach their goal. By using Raspberry Pi devices as the system’s fog nodes, and by distributing data onto these nodes to provide a summary, the system is scalable and delivers satisfactory outcomes.

\item Ning Chen et al. \cite{chen2017smart} discussed in their chapter (Smart City Surveillance in Fog Computing) fog computing and its impact on smart city surveillance systems. Moreover, they stated the major challenges faced in smart cities, the advantages of fog computing compared to cloud computing, and introduced a traffic detection case study. The system architecture is made up of three layers: data collection, fog, and cloud center. In the system, drones capture video streams and send them to get processed, using target tracking and speed calculation algorithms, in the fog layer. Moreover, data can be transmitted to the cloud center for further long-term analysis. This approach provides real-time processing and covers a wide range of areas.
\begin{figure}[htp]
    \centering
    \includegraphics[width=10cm]{336804_1_En_9_Fig3_HTML.png}
    \caption{Fog-based Traffic Detection in Smart Cities}
    \label{fig:galaxy}
\end{figure}
\item Yutong Liu et al \cite{liu2019litedge} address the obstacles faced when working with wireless surveillance systems, since wireless systems improve the performance and are easier to manage. As the amount of data to be transmitted gets larger, the challenges become visible and the burden on the network increases. This system reduces the pressure on the network by filtering and applying video compression. Moreover, the system provides real-time processing and monitoring using edge computing approach. Experimental results show that the system accomplishes 82 percent latency reduction. As well as, 91.26 percent transmission workload reduction as the redundant data get filtered out.

\end{itemize}
\cite{nateshafog}Fog-Based Video Surveillance System for Smart City Applications:the authors proposed two fog architecture as an experiment to reduce latency and cloud resource consumption. The first architecture shown in Fig2 was the Local Fog Node using SSN. They used the fog nodes at the lower level to analyze and extract the data in order to reduce data size and to help the low computational powered devices, an Intel Neural Compute Stick(NCS) which provides the pre-trained neural network model for video analysis and real-time object classification had been installed. The second architecture shown in Fig2 was Fog Server video processing using DNN. Where a  data center is used as the fog server as a layer between the cloud layer and devices. Applying those two architectures on vehicle data set proved that using fog computing for processing real-time videos is a successful approach while the other architecture is more efficient. However, they proved using one of those architectures or both of them creating a hybrid architecture can solve many challenges.
\FloatBarrier
\begin{figure}

 \begin{minipage}{.5\textwidth}
  \includegraphics[width=6.0cm, height=6.0cm]{./2.png}
  \caption{the Local Fog Node using SSN}
 \end{minipage}
  \begin{minipage}{.5\textwidth}
  \includegraphics[width=6.0cm, height=6.0cm]{./3.png}
  \caption{Fog Server video processing using DNN}
 \end{minipage}
\end{figure}
\FloatBarrier
\cite{6}Performance Evaluation of a Traffic Surveillance Application Using iFogSim: Using cloud-based architectures faces low latency while dealing with sensitive real-time applications; Therefore they proposed a new fog-based model for traffic surveillance was proposed. This model is based on three phases, inputting the IoT video streams, recognizing and tracking. Then, They used the ifogSim tool to simulate their approach using FogDevice, Sensor, Actuator, Tuple class, and Application class. The results compared to cloud-based systems proved to be efficient in the average latency, energy consumption, data transfer rate, and more. This paper also proved that fog-based applications do better than cloud ones.

\cite{Santamaria2019}Cooperative Video-Surveillance Framework in Internet of Things (IoT) Domain:Due to the large number of data collected by surveillance cameras , many challenges appeared to analyze , store and retrieve data.In this chapter they are introducing the basics needs to build a framework for people's abnormal behaviors.After investigating the current techniques and technologies.Using distributed architecture as shown in fig 4. was the main solution as it helps the performance of the system, then they mentioned the responsibility of each layer in the system , the possible computer vision techniques that can be used with their pros and cons as Neural networks and KNN . Object detection and tracking 
\FloatBarrier
\begin{figure}
\centering
 \begin{minipage}{.5\textwidth}
  \includegraphics[width=6.0cm, height=6.0cm]{./4.png}
  \caption{the Distributed eccosystem in cloud domain}
 \end{minipage}
\end{figure}
\FloatBarrier

\section{What is new in the Proposed Project?}

\section{Proof of concept}
Demonstrate the 10\% implemented in your project so far.

\section{Project Management and Deliverables}
\subsection{Deliverables}
\begin{itemize}
\item What will the project produce? (program, reports, etc.)
\item Describe in brief detail the features of each of the deliverables.
\item Separate deliverables into milestones (based on MIU graduation project calendar)
\end{itemize}
\subsection{Tasks and Time Plan}
Use some software for primitive plan of your project.
\subsection{Budget and Resource Costs}

\section{Supportive Documents}
Add sections covering one or more of the following:
\begin{itemize}

\item Dataset.
\item Contact documents
\item users/survey
\item Contacting authors.

\end{itemize}

\section {References}
\nocite{*}
\printbibliography
\end{document}
