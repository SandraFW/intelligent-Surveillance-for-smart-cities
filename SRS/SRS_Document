\documentclass[12pt]{article}
\usepackage{graphicx}
\usepackage[utf8]{inputenc}
\usepackage{makecell}
\usepackage[margin=1in]{geometry}
\usepackage[T1]{fontenc}
\usepackage{mathptmx}
\usepackage[normalem]{ulem}
\usepackage{placeins}
\renewcommand\theadalign{bc}
\renewcommand\theadfont{\bfseries}
\renewcommand\theadgape{\Gape[4pt]}
\renewcommand\cellgape{\Gape[4pt]}

\usepackage[
backend=biber,
style=numeric,
sorting=none,
citestyle=ieee
]{biblatex}

\addbibresource{Ref.bib}

%opening
\title{Software Requirement Specification Document for Intelligent Surveillance for smart cities}
\author{
Nour Ahmed, Nour ElHoda Hisham, Mariam Hesham, Samiha Hesham, Sandra Fares\\
Supervised by:
Dr. Islam Tharwat, Eng. Lobna Mostafa
}

\begin{document}
\maketitle

\begin{table}[htp]
\caption{Document version history}
\begin{center}
\begin{tabular}{|c|c|l|}
\hline
\thead{Version}    & \thead{Date} & \thead{Reason for Change}  \\ \hline
1.0 & 25-Oct-2020   & \makecell[l]{SRS First version’s specifications are defined.}   \\ \hline
1.1 & 2-Dec-2020   & \makecell[l]{Added use case for User and Admin.\\Identified remaining functional requirements.\\Identified hardware constraints} \\ \hline
1.3 & 5-Dec-2020   & \makecell[l]{Non-Functional Requirements updated.\\Removed additional unnecessary user interface design constraints.} \\
\hline
\end{tabular}
\end{center}
\end{table}

\begin{table}[htp]
\begin{tabular}{cc}
\thead{GitHub:}    & {https://github.com/SandraFW/intelligent-Surveillance-for-smart-cities}   
\end{tabular}
\end{table}

\pagebreak
\begin{abstract}
Surveillance systems are of vital importance for the development of smart cities. These systems can be considered vision organs of such cities. It is expected that a huge amount of data (Big Data) will be generated in smart cities. Therefore, to ensure the safety of its citizens, it is important to provide an efficient and real-time analysis of these data to get real-time responses, when catastrophic events occur. Accordingly, transmitting this massive data to the cloud, to be processed, is relatively slow. Therefore, the purpose of this project is to implement an edge computing- based surveillance system to offer real-time data processing. When surveillance videos capture an incident, the data get transferred to the edge for processing. Moreover, a rapid response is then provided to properly handle the occasion. Furthermore, despite tackling scalability obstacles, the system should handle privacy-sensitive data to overcome the privacy challenges in smart cities.
\end{abstract}

\section{Introduction}

\subsection{Purpose of this document}
The main purpose of this software requirement specification document is to clarify and illustrate the idea of our project, which is mainly about IoT guard. Nowadays, cloud-based IoT architectures have many issued in storing and processing essential surveillance data. By locating fog in between cloud and edge devices, it would offer decentralized computing infrastructure to execute significant amount of storage, management, control and communication. Also, it will respond quickly.
On the other hand, instead of using camera sensors all the time in the presence of any target events, event driven offered to monitor surveillance activity in the field of view.
\subsection{Scope of this document}
Intelligent surveillance system is useful for kidnapping prevention,terrorist or forensic evidence detection and traffic monitoring.The system is fog computing based that should be accurate and responsive.The police units will receive a notification when a kidnapping accident occurs.Also the location of the accident will be sent to reach the place quickly.The system will also enhance privacy in order to keep citizen's data blurred.
\subsection{System Overview}

\begin{figure}[htp]
\centering
\includegraphics[width=15cm,height=10cm,keepaspectratio]{./D2.jpeg}
\caption{Illustration of high-level view of the system.}
\label{fig:D1}
\end{figure}
The system aims to prevent Kidnapping acts in smart cities by fast prediction and detection of those incidents, using a framework composed of three computing layers. First, the cameras located at the potential crime scenes acting as the edge nodes; Light-weighted algorithms are deployed on them for any possible failure in the device and human motion detection. Once it detects abnormal motion, the data moves to the second layer, the fog nodes layer where the processing is completed and alerts are generated to the authorities, with possibilities to track and detect the kidnapper's face too. Then transmits the data to the third layer, the cloud layer where data backup and system updates are done. The system must ensure safety and privacy measures for the citizens while using and transferring the captured data throughout the day. 
\newpage
\subsection{System Scope}
\begin{itemize}
\item Fog/Edge computing-based surveillance system to monitoring the whole city 24/7.
\item Efficiently detect any abnormal actions caused by human behavior and response immediately.
\item Privacy assurance by blur people’s faces to secure their exposed identity in the video.
\item Scalability system to handle such massive data generated from surveillance cameras and sensors.
\item Efficiently detection for any failure that impacts the usefulness of the video streams.
\item Dispatch crime details (i.e., video and location of the event, criminal's face) and giving alert to the nearest competent authority.
\item Applying a prediction function to predict possible abnormal events.
\item Providing efficient real-time tracking for the criminal in case of detecting a massive crime.
\item Face recognition for a criminal when an event occurs in the far distance through high-resolution video.
\end{itemize} 

\subsection{Business Context}
The proposed system is implemented to reduce kidnapping rate. By using fog-edge computing in camera sensors, it will be easy to detect kidnapping or predict it before happening, also it would recognize the criminal by face recognition by the aid of AI and ML. Moreover, it will alert the police to track him.
The most important thing that fog computing has an important role to store and processing essential surveillance data even though it's big storage.

\section{Similar Systems}
\subsection{Academic}
\begin{itemize}
\item In the hopes of decreasing and preventing crimes in a smart home environment (SHE), Tanin Sultana and Khan A. Wahid \cite{sultana2019iot} proposed a framework called IoT guard. The authors designed an edge-fog architecture to assist in detecting crimes, predicting them, and sending alerts to police units to take immediate actions and prevent any catastrophic event from occurring. As shown in Figure \ref{security}, Initially, the edge nodes, or the cameras, detect if an event took place. Whenever an action is detected, the edge nodes will forward the surveillance data to the fog nodes to get processed. The fog nodes will then apply object detection algorithms, predict possible events, send alerts to the police unit, and finally send data to the cloud server for system updates or any further analysis. Results show the system’s performance is better than transitional IoT surveillance systems. It is efficient and scalable.

\begin{figure}[htp]
    \centering
    \includegraphics[width=12cm]{Screenshot (299).png}
    \caption{IoT-guard security management system}
    \label{security}
\end{figure}
\newpage
\item Hui Sun et al. \cite{sun2019vu} presented an edge computing-enabled video usefulness model (VU) in order to handle failures that might occur in surveillance videos, using failure detection approaches, as it usually takes a great amount of time for maintenance teams to determine what causes the failure. Moreover, the system provides bandwidth improvement, as useless video surveillance data might consume bandwidth that is needed by useful and informative videos. Experimental results show that the system detects failures efficiently.

\item Due to the large number of data collected by surveillance cameras, many challenges appeared in analyzing, storing, and retrieving data. Santamaria et al. \cite{santamaria2019cooperative} introduced the basics needed to build a framework for people’s abnormal behaviors, after investigating the current techniques and technologies. The authors proposed a distributed architecture as shown in Figure \ref{Santamaria}. Distributed architectures assist in reducing the computation of the end devices, which help in improving the performance and avoiding waste of bandwidth and memory.  In addition, they mentioned the responsibility of each layer in the system, the possible computer vision techniques that can be used with their pros and cons as Neural networks, and the KNN model for object detection and tracking. Results show that an alarm is triggered when detecting an anomaly in  order to track it.

\begin{figure}[!ht]
\centering
 \begin{minipage}{.5\textwidth}
  \includegraphics[width=10.0cm, height=10.0cm]{./4.png}
  \caption{the distributed ecosystem in cloud domain}
  \label{Santamaria}
 \end{minipage}
\end{figure}
 
\end{itemize}

\pagebreak
\subsection{Business Applications}
\begin{itemize}
\item For helping smart cities to achieve a safe and secure environment, Logipix \cite{logipix} Technical Development Ltd is a privately held organization founded in 1996 in Hungary that provides intelligent video monitoring solutions for wide public areas in the cities. They highlighted their solutions as a scalable city-wide system that is designed and developed to achieve a video surveillance system and traffic violation management tasks at the same time. The main goal of Logipix solutions is to provide a real-time system that is able to surveil the whole city 24/7 efficiently, the system also can respond immediately and take proper action in case of detecting any abnormal event. Moreover, the system captures all the events with high resolution even at miles away, face recognition is still possible. For helping the competent authorities, these recordings can be used as unappealable evidence on demand.

\item BT Business \cite{BT} is a retail division of the United Kingdom telecommunications company that provides many solutions that build smart cities. For securing smart cities and in order to help the administrators make swift decisions and help them to fast respond to what’s going on and to prevent suspicious events before they happen, BT provides surveillance solutions for local councils, streets, public transport , police stations and more. Moreover, they helped many United Kingdom cities to turn to smart cities by the installation of public WiFi and cameras to help monitor traffics, give real-time alerts for trams, buses and more. For cost-effective and best-of-breed surveillance solutions, BT company partners with industry-leading suppliers as CISCO and BOSCH and many other huge suppliers.
\end{itemize} 

\section{System Description}

\subsection{User Problem Statement}
One of the problems that face inhabitants in smart cities is kidnapping. Nowadays, the rate of kidnapping is constantly increasing which threatens 
national security. Moreover, there is nothing to prevent or reduce this problem like a camera sensor when something dangerous happened, it makes an alert to the police.

\subsection{ User Objectives}
Our system is crucial, as its fundamental goal is to ensure the citizens’ safety. For our users, the system should provide a rapid response to take appropriate action in time. When an anomaly gets captured on a surveillance camera, the system should detect it and determine if it’s a kidnapping case. Moreover, the system should track the kidnapper, identify his face, and trigger an alarm for our users, in our case, to the nearest police unit.
\subsection{ User Characteristics}
\begin{itemize}
\item Police: Must have basic knowledge in following up any notification that the system will sent in order to catch the kidnapper.
\end{itemize}
\subsection{System Context}
\begin{figure}[h!]
\centering
\includegraphics[width=15cm,height=10cm,keepaspectratio]{./D1.jpeg}
\caption{Architecture of the system.}
\label{fig:D1}
\end{figure}
 \begin{figure}[h!]
\centering
\includegraphics[width=15cm,height=10cm,keepaspectratio]{./D3.jpeg}
\caption{Context Diagram of the system.}
\label{fig:D3}
\end{figure}

\section{Functional Requirements}
\subsection{System Functions}\label{System Functions}
\begin{enumerate}
\item The system must be able to detect the accident accurately.
\item The system must be able to predict the event before occurring in order to prevent it.
\item The system must be able to track the kidnapper from the location of the incident.
\item The system should requires face blurring for normal citizens in order to enhance privacy in surveillance system.
\item The system should send alert if any failure is detected in the cameras occurred in order to help the maintenance team to solve the problem.
\item The system must send alert message when anomaly behaviour is detected using the fog nodes in the architecture system.
\item The system shall provide face recognition feature for the kidnapper.
\item The system should filter the incident using video splitting technique in order to be saved and sent to the cloud to save storage.

\end{enumerate}

\subsection{Detailed Functional Specification}
Show the details of all functions shown in section \ref{System Functions}. Describe each function in the following structure.

\begin{table}[h!]
\caption{Check failure of the camera}
\begin{tabular}{|p{0.15\textwidth}|p{0.85\textwidth}|}
\hline
\textbf{Name}           &  Check failure of the camera \\ \hline
\textbf{Code}           &  FR01 \\ \hline
\textbf{Priority}       & Extreme \\ \hline
\textbf{Critical}       & It's essential to detect if any failure happens to the video streams and enclose it to efficiently detect an event, avoid network overload, and improve the cloud storage usage \\ \hline
\textbf{Description}    & The system detects if any failure that impacts the usefulness of the video streams (i.e., natural occlusion, disruption) happens. Then, sending an alert of the failure to the maintenance team to recover it   \\ \hline
\textbf{Input}          & Video stream                                                                             \\ \hline
\textbf{Output}         & Boolean if it detects failure or not                                                                             \\ \hline
\textbf{Pre-condition}  & A failure happens in the video streams.                                                                                                                                                                    \\ \hline
\textbf{Post-condition} & A failure is detected and enclosed with an alert to the maintenance team to recover it      \\ \hline
\textbf{Dependency}     & -                                      \\ \hline
\textbf{Risk}           & - \\ \hline
\end{tabular}
\end{table} 

\begin{table}[h!]
\caption{Face blurring}
\begin{tabular}{|p{0.15\textwidth}|p{0.85\textwidth}|}
\hline
\textbf{Name}           &  Face blurring \\ \hline
\textbf{Code}           & FR02 \\ \hline
\textbf{Priority}       & Extreme \\ \hline
\textbf{Critical}       & It's extremely essential to ensure the privacy and identity of the citizens that exposed to privacy violation in the video surveillance \\ \hline
\textbf{Description}    &In the real-time video surveillance after detecting the people's faces, the system uses a blur algorithm to blur the face to be indiscernible.  \\ \hline
\textbf{Input}          & Video stream                                                                                                                                                                   \\ \hline
\textbf{Output}         & Video stream                                                                                                                                                                      \\ \hline
\textbf{Pre-condition}  & Detecting people's faces in real-time video surveillance to blur it               \\ \hline
\textbf{Post-condition} &The detected faces are been blurred      \\ \hline
\textbf{Dependency}     & FR01 – FR03                                       \\ \hline
\textbf{Risk}           & If there is any failure that impacts the usefulness of the video stream \\ \hline
\end{tabular}
\end{table} 

\begin{table}[h!]
\caption{motion detection}
\begin{tabular}{|p{0.15\textwidth}|p{0.85\textwidth}|}
\hline
\textbf{Name}           &  motion detection function \\ \hline
\textbf{Code}           & FR03 \\ \hline
\textbf{Priority}       & Extreme \\ \hline
\textbf{Critical}       & It is really essential; An action needs to be detected in order to take the appropriate action to predict or prevent it.   \\ \hline
\textbf{Description}    & when any action is captured from a surveillance camera, motion detection algorithms, as well as image processing techniques, are applied to detect it.  \\ \hline
\textbf{Input}          & video stream                                                                                                                                                                   \\ \hline
\textbf{Output}         &  video stream                                                                                                                                                                     \\ \hline
\textbf{Pre-condition}  & surveillance camera captures an event.                                                                                                                                                                    \\ \hline
\textbf{Post-condition} & the event gets detected.      \\ \hline
\textbf{Dependency}     & \begin{tabular}[c]{@{}l@{}}
FR01.\\ This function depends on FR01, because if any failure took place on surveillance \\ cameras, the event will not be detected.
\end{tabular}                                       \\ \hline
\textbf{Risk}           & If any failure happens when capturing video streams. \\ \hline
\end{tabular}
\end{table} 



\begin{table}[h!]
\caption{Motion Image Dispatch Function }
\begin{tabular}{|p{0.15\textwidth}|p{0.85\textwidth}|}
\hline
\textbf{Name}           &   image motion dispatch \\ \hline
\textbf{Code}           &  FR04 \\ \hline
\textbf{Priority}       &  Extreme \\ \hline
\textbf{Critical}       & It is very essential function for the system \\ \hline
\textbf{Description}    & On abnormal motion detection , it gathers location information and dispatches motion image and sends it for the further processing. \\ \hline
\textbf{Input}          & video stream  \\ \hline
\textbf{Output}         & video stream  \\ \hline
\textbf{Pre-condition}  & abnormal motion detected in function FR03        \\ \hline
\textbf{Post-condition} & Dispatch the stream to other processing \\ \hline
\textbf{Dependency}     & FR01-FR03 \\ \hline
\textbf{Risk}           & Camera has any failure in capturing the video streams and can be fixed with FR01\\ \hline
\end{tabular}
\end{table} 

\begin{table}[h!]
\caption{action prediction}
\begin{tabular}{|p{0.15\textwidth}|p{0.85\textwidth}|}
\hline
\textbf{Name}           &  action prediction function \\ \hline
\textbf{Code}           & FR05 \\ \hline
\textbf{Priority}       & High \\ \hline
\textbf{Critical}       & It is important to predict an event before occurring in order to prevent it and avoid tragic situations.  \\ \hline
\textbf{Description}    & after dispatching the needed video stream, an event prediction function can be applied to determine the possible events that could happen.  \\ \hline
\textbf{Input}          & video stream                                                                                                                                                                   \\ \hline
\textbf{Output}         &  Boolean if action is kidnapping.                                                                                                                                                                   \\ \hline
\textbf{Pre-condition}  & Dispatched video stream is processed.                                                                                                                                                            \\ \hline
\textbf{Post-condition} & action is predicted.      \\ \hline
\textbf{Dependency}     & \begin{tabular}[c]{@{}l@{}}
FR01, FR03, FR04.\\  FR01: if any failure took place on surveillance cameras, motion will not be detected \\ in order to predict it. \\
FR03: if motion is not detected, surveillance data cannot be processed further more.\\ So, prediction  will not occur. \\ FR04: video stream needs to be dispatched before forwarding it for further \\ processing.
\end{tabular}                                       \\ \hline
\textbf{Risk}           &  If any failure happens when capturing video streams, if motion was not detected, or if the needed video stream was not dispatched. \\ \hline
\end{tabular}
\end{table} 

\begin{table}[h!]
\caption{Alert Function Description}
\begin{tabular}{|p{0.15\textwidth}|p{0.85\textwidth}|}
\hline
\textbf{Name}           & Alert  \\ \hline
\textbf{Code}           & FR06 \\ \hline
\textbf{Priority}       & Extreme  \\ \hline
\textbf{Critical}       & It is important to alert police by kidnapping incident. \\ \hline
\textbf{Description}    & To maintain the situation, there must an alert send to the police to come urgently and catch the criminal.. \\ \hline
\textbf{Input}          & Video stream , face recognition ,location                                                                                                                                                                 \\ \hline
\textbf{Output}         & Alert                                                                                                                                                                   \\ \hline
\textbf{Pre-condition}  & After detection of kidnapping incident in FR05 and face recognition in FR08, an alert must be sent to police by Fog computing.                      \\ \hline                                                                                     
\textbf{Post-condition} & Alert to police.      \\ \hline
\textbf{Dependency}     & \begin{tabular}[c]{@{}l@{}}
FR05: By detection of the kidnapping incident, \\ FR08: by Face recognition \\ FR07: By detecting the location of the criminal, Fog will send an alert to the police to rescue the victim.
\end{tabular}                                       \\ \hline
\textbf{Risk}           & Failure to send an alert if there is data is missing or there was a difficulty to send an alert. \\ \hline
\end{tabular}
\end{table} 

\begin{table}[h!]
\caption{Kidnapper Tracking Function }
\begin{tabular}{|p{0.15\textwidth}|p{0.85\textwidth}|}
\hline
\textbf{Name}           & Kidnapper Tracking Function \\ \hline
\textbf{Code}           &  FR07 \\ \hline
\textbf{Priority}       &  low \\ \hline
\textbf{Critical}       & it is a supplementary function in the system\\ \hline
\textbf{Description}    & After detection of a kidnapping incident their should be a tracking for the kidnapper from the location of the incident to help the authorities catch him \\ \hline
\textbf{Input}          & location  \\ \hline
\textbf{Output}         & location  \\ \hline
\textbf{Pre-condition}  & abnormal motion detected FR03,location detetcted and video dispatched in FR04 and predection FR05     \\ \hline
\textbf{Post-condition} & tracing kidnapper location and report the authorities \\ \hline
\textbf{Dependency}     & FR01-FR03-FR04-FR05 \\ \hline
\textbf{Risk}           & Camera has any failure in capturing the video streams and can be fixed with FR01. Or kidnapper runs to a place can't be reached by the system\\ \hline
\end{tabular}
\end{table} 

\begin{table}[h!]
\caption{Face Recognition Function Description}
\begin{tabular}{|p{0.15\textwidth}|p{0.85\textwidth}|}
\hline
\textbf{Name}           & Face Recognition  \\ \hline
\textbf{Code}           & FR08 \\ \hline
\textbf{Priority}       & Extreme  \\ \hline
\textbf{Critical}       & It is important to recognize the criminal's face to make it easy for the police to catch him. \\ \hline
\textbf{Description}    & During the crime scene, there should face recognition from a camera sensor to detect the features of the criminal. \\ \hline
\textbf{Input}          & Video stream                                                                                                                                                                 \\ \hline
\textbf{Output}         & Criminal's face                                                                                                                                                                    \\ \hline
\textbf{Pre-condition}  & After detection of the kidnapping incident in FR05, the camera must capture a criminal's face.  \\ \hline                                                                                                                                                           
\textbf{Post-condition} & Face recognition      \\ \hline
\textbf{Dependency}     & \begin{tabular}[c]{@{}l@{}}
FR05: By detection of the kidnapping incident, the camera will capture or recognize \\ the features of the criminal.
Failure in camera when capturing the criminal.
\end{tabular}                                       \\ \hline
\textbf{Risk}           & Failure in camera when capturing criminal. \\ \hline
\end{tabular}
\end{table} 
\FloatBarrier
\newpage
\section{Interface Requirements}
This section describes how the software interfaces with other software products or users for input or output. Examples of such interfaces include library routines, token streams, shared memory, data streams, and so forth. 
\subsection{User Interfaces}
Use some software for primitive plan of your project.
Describes how this product interfaces with the user. 
\subsubsection {GUI}
Describes the graphical user interface if present. This section should include a set of screen dumps or mockups to illustrate user interface features. 
If the system is menu-driven, a description of all menus and their components should be provided. 
\subsubsection { CLI}
Describes the command-line interface if present. For each command, a description of all arguments and example values and invocations should be provided. 


\subsection{Hardware Interfaces}
Describes interfaces to hardware devices. (According to your Project)
\subsection{Communications Interfaces}
As our project highly depends on communication among entities, architectures such as fog networking, edge networking, and cloud networking are dominant. To reduce the overload on the network, the processing happens on both the edge and fog nodes to provide real-time response. Moreover, the data then gets transferred to the cloud for further processing.
\subsection {API}
Describes the application programming interface, if present. For each public interface function, the name, arguments, return values, examples of invocation, and interactions with other functions should be provided. 

\section{Design Constraints}
Specifies any constraints for the design team using this document. 
\subsection{ Standards Compliance}
\subsection{ Hardware Limitations}
N/A
\subsection{ Other Constraints as appropriate}

\newpage
\section{Non-functional Requirements}
Specifies any other particular non-functional attributes required by the system. Such as: Security, Reliability, Maintainability, Portability, Extensibility

\section{Data Design}
\subsection{Data Description}
Explain how the information domain of your system is transformed into data structures. Describe how the major data or system entities are stored, processed and organized. \\
Explain your Dataset. How the dataset is collected, stored and organized.\\
You may consider the answer for the following questions:
\begin{itemize}
\item What is the original format of the data (paper based, excel files, old system database)?
\item Identify the method used to capture the data into your system(web page forms, import documents etc..)?
\item How large is the database expected to be (in numbers of rows and columns for the main entities)?
\item What is the expected number of users/customers for the system?
\item How is your entity keys(ids) constructed (is there a specific code or format for ID definition)
\item Does your data contain date/time, if yes which format are they presented in
\end{itemize}


\subsection{Database design description}
Describe any databases (provide database schema diagram) and/or description of other data storage items. (According to your Project)



\section{Preliminary Object-Oriented Domain Analysis}
This section presents a list of the fundamental objects that must be modeled within the system to satisfy its requirements. The purpose is to provide an alternative, ''structural'' view on the requirements stated above and how they might be satisfied in the system. A primitive class diagram to be delivered.

\subsection{Inheritance Relationships}
This section should contain a set of graphs that illustrate the primary inheritance hierarchy (is-kind-of) for the system. For example Figure \ref{fig:image}. 

\begin{figure}[htp]
\centering
\includegraphics[width=0.7\linewidth]{./image}
\caption{Inheritance Relations}
\label{fig:image}
\end{figure}

\subsection{Class descriptions}
This section presents a more detailed description of each class identified during the OO Domain Analysis. Add class diagram and describe each class in the following structure: 

\begin{table}[ht]
\caption{Class Name - xxx}
\label{tab:my-table}
\begin{tabular}{|p{0.25\textwidth}|p{0.75\textwidth}|}
\hline
\textbf{Abstract or Concrete:} & Indicates whether this class is abstract or concrete.
\\ \hline
\textbf{List of Superclasses}  & Names all immediate superclasses.                                                       
\\ \hline
\textbf{List of Subclasses}    & List of Subclasses                                                                      
\\ \hline
\textbf{Purpose}               & Purpose                                                                                 
\\ \hline
\textbf{Collaborations}        & Names each class with which this class must interact in order to accomplish its purpose, and how.
\\ \hline
\textbf{Attributes}            & Lists each attribute (state variable) associated with each instance of this class, and indicates examples of possible values (or a range).
\\ \hline
\textbf{Operations}            & Lists each operation that can be invoked upon instances of this class.  For each operation, the arguments (and their type), the return value (and its type), and any side effects of the operation should be specified. 
\\ \hline
\textbf{Constraints}           & Lists any restrictions upon the general state or behavior of instances of this class.   
\\ \hline
\end{tabular}
\end{table}

\section{Operational Scenarios}
This section should describe a set of scenarios that illustrate, from the user's perspective, what will be experienced when utilizing the system under various situations. 
In the article Inquiry-Based Requirements Analysis (IEEE Software, March 1994), scenarios are defined as follows: 
In the broad sense, a scenario is simply a proposed specific use of the system. More specifically, a scenario is a description of one or more end-to-end transactions involving the required system and its environment. Scenarios can be documented in different ways, depending up on the level of detail needed. The simplest form is a use case, which consists merely of a short description with a number attached. More detailed forms are called scripts. These are usually represented as tables or diagrams and involved identifying an action and the agent (doer) of the action. For this reason, a script can also be called an action table. 
Although scenarios are useful in acquiring and validating requirements, they are not themselves requirements, because the describe the system's behavior only in specific situations; a specification, on the other hand, describes what the system should do in general. 

\section{Project Plan}
This section provides an initial version of the project plan, including the major tasks to be accomplished, their inter-dependencies, and their tentative start/stop dates. The plan also includes information on hardware, software, and  resource requirements. 
The project plan should be accompanied by one or more PERT or GANTT charts such as the chart shown in Figure \ref{fig:GANTT Chart}.\\
The plan should include the projects task and who is responsible for this task.
Table \ref{tab:Time Plan} shows a simple example.

\begin{table}[h]
\centering
\caption{Project name time plan}
\label{tab:Time Plan}
\begin{tabular}{|l|l|l|l|l|}
\hline
Id & Task               & Start Date & Number of Days & Team Member \\ \hline
1  & Collect Dataset    & 12/10/2020 & 10             & X, Y        \\ \hline
2  & Work on GUI        & 12/21/2020 & 15             & Z, Y        \\ \hline
3  & Pre-Processing     & 12/21/2020 & 5              & X           \\ \hline
4  & Feature Extraction & 12/26/2020 & 5              & X, Z, Y     \\ \hline
5  & Classification     & 12/31/2020 & 10             & Z           \\ \hline
6  & Writing Paper      & 01/05/2021 & 30             & X, Z, Y     \\ \hline
7  & Experiments        & 01/10/2021 & 20             & X, Z, Y     \\ \hline
\end{tabular}
\end{table}


\begin{figure}[htb]
\centering
\includegraphics[width=\linewidth]{./GANTT}
\caption{Project name GANTT Chart}
\label{fig:GANTT Chart}
\end{figure}

\section{Appendices}
Specifies other useful information for understanding the requirements. All SRS documents should include at least the following two appendices: 

\subsection{Definitions, Acronyms, Abbreviations}
Provides definitions of unfamiliar definitions, terms, and acronyms. 


\subsection{Supportive Documents}


\section {References}
30 Reference Minimum (80\% Academic)
\printbibliography
\end{document}
