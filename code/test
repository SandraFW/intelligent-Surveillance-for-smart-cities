\documentclass[]{article}
\usepackage{placeins}
%Image-related packages
\usepackage{graphicx}
\usepackage{float}
\usepackage{adjustbox}
\usepackage{subcaption}
\usepackage[utf8]{inputenc}
\usepackage[export]{adjustbox}
\usepackage{wrapfig}
\usepackage{booktabs}
\usepackage{tabularx}
%opening

\title{Software Requirement Specification Document 
\newline For Food Studio Application }

\author{ Mariam Hesham, Nour Ahmed, Samiha Hesham, Sandra Fares}

\begin{document}

\maketitle
\begin{table}[htp]
\begin{tabular}{|l|l|l|}
\hline 
\thead{Version}    & \thead{Date} & \thead{Reason for Change}  \\
\hline
1.0 & 08-October-2020   & \makecell{first version created}   \\ 
\hline
2.0 & 08-November-2020   & \makecell{UI created }   \\ 
\hline
2.1 & 15-November-2020   & \makecell{User interface' images are modified}   \\ \hline
3.0 & 06-December-2020   & \makecell{Non functional requirements are updated }   \\ \hline
4.0 & 05-January-2021   & \makecell{Object-Oriented Analysis is added, Design Constraints are updated}   \\ \hline

\end{tabular}
\caption{Document version history}
\end{table}
\begin{table}[ht]
\begin{tabular}{cc}
\thead{GitHub:}    & {https://github.com/SandraFW/MobFoodRecipeApp}   
\end{tabular}
\end{table}


\maketitle
\newpage
\tableofcontents

\newpage

\section{Introduction}

\subsection{Purpose of this document}
The purpose of this document is to elucidate the requirements to build a food recommendations system. These requirements include adding food recipes, viewing them, and rating them based on their quality. The aim of this project is to offer an easier and more organized way for people to share a variety of food recipes with each other. Depending on the reviews given to each recipe, the application will keep the user updated with the finest recipes and the latest food trends. Moreover, the user can view a dish of his choice and choose his desired recipe based on the reviews shown.

\subsection{ Scope of this document}
The scope of this document is to show the basic outlines of our system requirements in order to understand our system and the issues we may face. Requirements outlined in this document are subject to change. 


\subsection{Overview}
The Food recommendation system is developed to predict the preferences of users to certain recipes. We will design a  recommendation system based on a novel model \cite{a} that captures correlations between hidden aspects in reviews and numeric ratings. It is motivated by observing the userâ€™s preference against an item is affected by different aspects discussed in reviews. The software will be managed by the admins and the users. The admin can view all user's details and will be in charge to control everything in the system including banning any user for any misbehave comment or any problem in the system. The user can post a new recipe, rate any new post and comment on it. The system also offers the user the ability to save any post to their favourite panel.
\subsection{Business Context}

The main goal of the project is to build a well-developed mobile application for managing and organizing food recipe recommendation systems. The system aims to reduce time and complexities for the users, by making it much easier to find and save desired recipes. Moreover, the system saves users' time by making them able to view the reviews and rates for each recipe to choose well-cooked food.

\section{General description}

\subsection{Product Functions}

\begin{enumerate}
  \item The system shall be fully dynamic, in which the admin fully controls the system.
  \item The users should be able to control their information.
  \item The user should be able to post the recipe he/she want to share on his/her profile.
  \item The user shall be able to comment, rate and save any post.
  \item The user should be able to report any post.
  \item The user shall be able to search for any recipe.
  \item The admin should be able to view any reports that are added by users against certain comment or post for safety.
 \item The system should observe a statistics that is based on the ratings that shows the most trending food recommendations to all the users.
\end{enumerate}

\subsection{Similar System Information}
Many similar mobile applications provide food recommendation services such as Cookmate \cite{Cookmate}, Cook Pade \cite{Cookpad}, and Cookbook \cite{KitchenBowl} (which is the most relevant one). Cookbook is available for installation by any user in need through the apple store. It is a platform for people who are passionate about cooking. It is a place where they can create and share their favorite recipes, follow family, friends, and the featured cooks. Moreover, they can search for dishes and discover new food ideas, just like our application intended to do.
\clearpage
\begin{figure}[h]
  \begin{minipage}[b]{0.5\textwidth}
    \includegraphics[width=5.0cm, height=10.0cm]{kitchenbowl.jpg}
    \caption{Kitchenbowl Application}
  \end{minipage}
    \begin{minipage}[b]{0.5\textwidth}
    \includegraphics[width=5.0cm, height=10.0cm]{Screenshot (143).png}
    \caption{Cookmate Application}
  \end{minipage}
\label{label1}
\end{figure}


\subsection{ User Characteristics}
\\  \\
Admin: The main role of the admin is controlling the whole project. He is able to view the shared recipes and delete the unwanted posts or comments. Moreover the admin can ban any user after being reported for his unacceptable behavior. 
\\ \\
Casual users: Users can post a various recipes. They can search for a desired recipe, rate it and  save it.


\subsection{ User Problem Statement}
In various social media platforms, the user finds it difficult to determine if a recipe is worth trying, as there are a lot of recipes placed upon him. Moreover, the recipes and the information relevant to the user are sometimes unclear due to the disorganization of the system. To solve this problem, this application is user friendly and offers the information desired by the user in an effortless and more organized way.

\section{Functional Requirements}

\FloatBarrier

\begin{table}[h]

\caption{ }

\label{tab:my-table}
\begin{tabular}{|p{0.25\textwidth}|p{0.75\textwidth}|}
\hline
\textbf{Function:} & Check email validation.
\\ \hline
\textbf{ID}  &      FR00     
\\ \hline
\textbf{Description}    &    This Function checks if an email address is valid.                     
\\ \hline
\textbf{Type}    &         Boolean
\\ \hline
\textbf{Input}        & Email
\\ \hline
\textbf{Action}            & Checks if the email entered by the user is in the proper format. if it is, the function returns true.
\\ \hline
\textbf{Output}            & Boolean if email is valid
\\ \hline
\textbf{Precondition}           &   User entered email into the required text field.
\\ \hline
\textbf{Post-condition}          & return to login function (FR03)  
\\ \hline
\textbf{Dependencies}           & FR03.
\\ \hline
\end{tabular}
\end{table}

\FloatBarrier
\begin{table}[h]
\caption{ }
\label{tab:my-table}
\begin{tabular}{|p{0.25\textwidth}|p{0.75\textwidth}|}
\hline
\textbf{Function:} & Check password validation
\\ \hline
\textbf{ID}  &     FR01       
\\ \hline
\textbf{Description}    &      This function checks if the password is valid before inserting it in the database.                               
\\ \hline
\textbf{Type}    &         Boolean
\\ \hline
\textbf{Input}        & Password
\\ \hline
\textbf{Action}            & Checks if the password is in a valid format. If yes, it returns true.
\\ \hline
\textbf{Output}            & Boolean if password valid
\\ \hline
\textbf{Precondition}           &   User entered password into the required text field
\\ \hline
\textbf{Post-condition}           & Return to login function (FR03)
\\ \hline
\textbf{Dependencies}           & FR03
\\ \hline
\end{tabular}
\end{table}


\begin{table}[h]
\caption{ }
\label{tab:my-table}
\begin{tabular}{|p{0.25\textwidth}|p{0.75\textwidth}|}
\hline
\textbf{Function:} & Login.
\\ \hline
\textbf{ID}  &    FR03        
\\ \hline
\textbf{Description}    &       This Function is for the user to login into the system using his/her account.                               
\\ \hline
\textbf{Type}    &         Boolean
\\ \hline
\textbf{Input}        & Email and Password
\\ \hline
\textbf{Action}            & Checks if the data are filled correctly. If yes, the function returns true. otherwise, it returns false.
\\ \hline
\textbf{Output}            & Boolean acceptance login.
\\ \hline
\textbf{Precondition}           &   The user needs to input his email and password into the Text fields. (FR00, FR01)
\\ \hline
\textbf{Post-condition}           & Redirect to the home page
\\ \hline
\textbf{Dependencies}           & FR00, FR01
\\ \hline
\end{tabular}
\end{table}



\FloatBarrier
\begin{table}[h]
\caption{ }
\label{tab:my-table}
\begin{tabular}{|p{0.25\textwidth}|p{0.75\textwidth}|}
\hline
\textbf{Function:} & Forget Password
\\ \hline
\textbf{ID}  &            FR04
\\ \hline
\textbf{Description}    &        If the user forgets his password, this function gets generated. It helps the user to insert a new password so that he login successfully again.    
\\ \hline
\textbf{Type}    &       Boolean  
\\ \hline
\textbf{Input}        & Email
\\ \hline
\textbf{Action}            & First, the email is checked using FR00 then if the email exists in the database, the function sends email FR14 with the new password generated.
\\ \hline
\textbf{Output}            & password updated
\\ \hline
\textbf{Precondition}           &   The user enters his email in the Text field.
\\ \hline
\textbf{Post-condition}     & Notification is sent to the user with new password.
\\ \hline
\textbf{Dependencies}           & FR00, FR14
\\ \hline
\end{tabular}
\end{table}

\begin{table}[h]
\caption{}
\label{tab:my-table}
\begin{tabular}{|p{0.25\textwidth}|p{0.75\textwidth}|}
\hline
\textbf{Function:} & Create User.
\\ \hline
\textbf{ID}  & FR05          
\\ \hline
\textbf{Description}    &  The function
uses the input data to insert a new row in users table in the system database                                                              \\ \hline
\textbf{Type}    & void     
\\ \hline
\textbf{Input}  &  user data
\\ \hline
\textbf{Action} &  checks if the user's email and password are validated. if so, it enters the user record in the database and returns true. else, it returns false and an error message will appear 
\\ \hline
\textbf{Output} & new user record in database
\\ \hline
\textbf{Precondition}  & User's information is right and validated     
\\ \hline
\textbf{Post-condition} & Creating a new row in database table with for a new user.
\\ \hline
\textbf{Dependencies} & FR00 , FR01 , FR02  
\\ \hline
\end{tabular}
\end{table}

\FloatBarrier
\begin{table}[h]
\caption{}
\label{tab:my-table}
\begin{tabular}{|p{0.25\textwidth}|p{0.75\textwidth}|}
\hline
\textbf{Function:} & Delete User.
\\ \hline
\textbf{ID}        &FR06            
\\ \hline
\textbf{Description} & The Function is to remove the selected user row from users table                                                         \\ \hline
\textbf{Type}     & Boolean       
\\ \hline
\textbf{Input}   & ID of the user selected to be removed 
\\ \hline
\textbf{Action}  & check if the user id exists in database
\\ \hline
\textbf{Output}  & A Success Message if User is deleted 
\\ \hline
\textbf{Precondition}  & Administrator chooses which user to be deleted  
\\ \hline
\textbf{Post-condition} & User Record is deleted from database and database is updated 
\\ \hline
\textbf{Dependencies}  &FR05 
\\ \hline
\end{tabular}
\end{table}

\FloatBarrier
\begin{table}[h]
\caption{}
\label{tab:my-table}
\begin{tabular}{|p{0.25\textwidth}|p{0.75\textwidth}|}
\hline
\textbf{Function:} & Search Recipe.
\\ \hline
\textbf{ID}  & FR07           
\\ \hline
\textbf{Description} & The Function returns the recipe searched for by the user                                              
\\ \hline
\textbf{Type}  & Return Function        

\\ \hline
\textbf{Input}  &  Name of the recipe 

\\ \hline
\textbf{Action} & check if recipe name matches any of records in database. if a recipe exists it shows it to the user. else, returns null
\\ \hline
\textbf{Output} & if recipe exists
\\ \hline
\textbf{Precondition}   &   user enters recipe name
\\ \hline
\textbf{Post-condition} & recipe is retrieved from database if it is found.
\\ \hline
\textbf{Dependencies} & -- 
\\ \hline
\end{tabular}
\end{table}

\FloatBarrier
\begin{table}[h]
\caption{}
\label{tab:my-table}
\begin{tabular}{|p{0.25\textwidth}|p{0.75\textwidth}|}
\hline
\textbf{Function:} & Update User
\\ \hline
\textbf{ID}  &  FR08          
\\ \hline
\textbf{Description} & The Function performs an sql query to users table to update a certain record according to a specific user ID                                                     
\\ \hline
\textbf{Type}    &  Boolean       

\\ \hline
\textbf{Input}  & User ID and the desired category to be updated with it's new record  
\\ \hline
\textbf{Action} & check if those data can be updated 
\\ \hline
\textbf{Output}  & success message or failure message  
\\ \hline
\textbf{Precondition}  &  check if user exists in database and has the right to update 

\\ \hline
\textbf{Post-condition} & records in database are updated  
\\ \hline
\textbf{Dependencies}    & -- 
\\ \hline
\end{tabular}
\end{table}


\FloatBarrier
\begin{table}[h]
\caption{}
\label{tab:my-table}
\begin{tabular}{|p{0.25\textwidth}|p{0.75\textwidth}|}
\hline
\textbf{Function:} & Comment or review
\\ \hline
\textbf{ID}  & FR09           
\\ \hline
\textbf{Description}  & this function is to add a new comment on a certain post to the system in the database.                                      
\\ \hline
\textbf{Type}   & Boolean     
\\ \hline
\textbf{Input}  & User's comment
\\ \hline
\textbf{Action}  &  If the user's comment is created successfully,it gets recorded in the database else,it returns an error message.
\\ \hline
\textbf{Output}  & comment created successfully.
\\ \hline
\textbf{Precondition}  & Check if user's comment is. not empty. 
\\ \hline
\textbf{Post-condition}  & The comment has been added successfully.
\\ \hline
\textbf{Dependencies} & FR03-FR05
\\ \hline
\end{tabular}
\end{table}
\FloatBarrier
\begin{table}[h]
\caption{}
\label{tab:my-table}
\begin{tabular}{|p{0.25\textwidth}|p{0.75\textwidth}|}
\hline
\textbf{Function:} & Rate
\\ \hline
\textbf{ID}  & FR10          
\\ \hline
\textbf{Description} & This function is to store the rating every user will give to a any post that are ranged from one to five stars and according to this stars the trending statistics will be generated.
\\ \hline
\textbf{Type}    &  Boolean   
\\ \hline
\textbf{Input}   & number of the stars selected.
\\ \hline
\textbf{Action}  & Storing the rating number to the database.
\\ \hline
\textbf{Output}  & New rating is added to the database
\\ \hline
\textbf{Precondition}  & --   
\\ \hline
\textbf{Post-condition} & --  
\\ \hline
\textbf{Dependencies}  & FR03-FR05
\\ \hline
\end{tabular}
\end{table}

\begin{table}[h]
\caption{}
\label{tab:my-table}
\begin{tabular}{|p{0.25\textwidth}|p{0.75\textwidth}|}
\hline
\textbf{Function:} & Save
\\ \hline
\textbf{ID}  & FR11          
\\ \hline
\textbf{Description}  & This function is save a certain post to the favourite panel for every user.     
\\ \hline
\textbf{Type}   & Returns array         
\\ \hline
\textbf{Input}  & --
\\ \hline
\textbf{Action} & if the post is added successfully it gets recorded in the favorites database table. 
\\ \hline
\textbf{Output}  & new post is added to the favourites.
\\ \hline
\textbf{Precondition}   & --
\\ \hline
\textbf{Post-condition}  & check the existence of the saved posts.
\\ \hline
\textbf{Dependencies}    & FR03-FR05
\\ \hline
\end{tabular}
\end{table}

\FloatBarrier
\begin{table}[h]
\caption{}
\label{tab:my-table}
\begin{tabular}{|p{0.25\textwidth}|p{0.75\textwidth}|}
\hline
\textbf{Function:} & Report.
\\ \hline
\textbf{ID}  & FR12           
\\ \hline
\textbf{Description}    & User can report any post or misbehaved comment in any post.               
\\ \hline
\textbf{Type}    & Boolean  
\\ \hline
\textbf{Input}   & report Type ID
\\ \hline
\textbf{Action}  & If report is updated return true, else return false and show error message.
\\ \hline
\textbf{Output} & The report is successfully sent to the admin.
\\ \hline
\textbf{Precondition}   & There must be at least one comment Type added to the storage and action must be made by the admin. 

\\ \hline
\textbf{Post-condition} & The record of the user is updated in the database
\\ \hline
\textbf{Dependencies}   & FR03-FR05
\\ \hline
\end{tabular}
\end{table}

\FloatBarrier
\begin{table}[h]
\caption{ - }
\label{tab:my-table}
\begin{tabular}{|p{0.25\textwidth}|p{0.75\textwidth}|}
\hline
\textbf{Function:} & View Notification.
\\ \hline
\textbf{ID}  & FR13          
\\ \hline
\textbf{Description}    & viewing all the notification in the database                      
\\ \hline
\textbf{Type}    & return array       
\\ \hline
\textbf{Input}        & 
\\ \hline
\textbf{Action}            & fetching all the notifications in the database
\\ \hline
\textbf{Output}            & array of notifications
\\ \hline
\textbf{Pre condition}           & check the existence of notifications 
\\ \hline
\textbf{Post condition}           & 
\\ \hline
\textbf{Dependencies}           & FR03
\\ \hline
\end{tabular}
\end{table}

\FloatBarrier
\begin{table}[h]
\caption{}
\label{tab:my-table}
\begin{tabular}{|p{0.25\textwidth}|p{0.75\textwidth}|}
\hline
\textbf{Function:} & Send Notification.
\\ \hline
\textbf{ID}  & FR14           
\\ \hline
\textbf{Description}    & The function for sending the notification to the user                      
\\ \hline
\textbf{Type}    &  Boolean       
\\ \hline
\textbf{Input}        & Notification object
\\ \hline
\textbf{Action}            & Check for receiving the notification.
\\ \hline
\textbf{Output}            & If true string notification, if false there will be an error message.
\\ \hline
\textbf{Precondition}           & The user must be existed in the database.
\\ \hline
\textbf{Post-condition}           & The user will receive the notification, the notification is filled in the database
\\ \hline
\textbf{Dependencies}           & FR09
\\ \hline
\end{tabular}
\end{table}
\FloatBarrier
\begin{table}[h]
\caption{ - }
\label{tab:my-table}
\begin{tabular}{|p{0.25\textwidth}|p{0.75\textwidth}|}
\hline
\textbf{Function:} & Create post
\\ \hline
\textbf{ID}  &   FR15         
\\ \hline
\textbf{Description}    & This function is for the user to post a recipe on the application and share it with the other users.                          
\\ \hline
\textbf{Type}    &   Boolean      
\\ \hline
\textbf{Input}        & User ID. Recipe ingredients and steps to be added to the post
\\ \hline
\textbf{Action}            & If the post is added successfully ,it gets recorded in the database. else, it returns an error message.
\\ \hline
\textbf{Output}            & New post is added. 
\\ \hline
\textbf{Precondition}           &  Users must login first and create a new post to add the recipe.
\\ \hline
\textbf{Post-condition}           & Creating a new record in the database table with a new post ID. 
\\ \hline
\textbf{Dependencies}           & FR03 
\\ \hline
\end{tabular}
\end{table}


\FloatBarrier
\begin{table}[h]
\caption{ - }
\label{tab:my-table}
\begin{tabular}{|p{0.25\textwidth}|p{0.75\textwidth}|}
\hline
\textbf{Function:} & Update post
\\ \hline
\textbf{ID}  & FR16    
\\ \hline
\textbf{Description}    & This function is for the user to modify the recipe and save the new post.
\\ \hline
\textbf{Type}    &  Boolean       
\\ \hline
\textbf{Input}        & Post ID. New recipe to be updated.
\\ \hline
\textbf{Action}            & Check if the recipe data has been updated. If yes, it returns true. else, it returns an error message.
\\ \hline
\textbf{Output}            & Updated post is added.
\\ \hline
\textbf{Precondition}           &   Check if the post exists in database.
\\ \hline
\textbf{Post-condition}           & Record in the database is updated.
\\ \hline
\textbf{Dependencies}           &FR03,FR15 
\\ \hline
\end{tabular}
\end{table}

\FloatBarrier
\begin{table}[h]
\caption{ - }
\label{tab:my-table}
\begin{tabular}{|p{0.25\textwidth}|p{0.75\textwidth}|}
\hline
\textbf{Function:} & Delete post.
\\ \hline
\textbf{ID}  &   FR17    
\\ \hline
\textbf{Description}    &   This function is for deleting a specific post whether by the admin or the user.                                       
\\ \hline
\textbf{Type}    &     Boolean    
\\ \hline
\textbf{Input}        & Post ID to be deleted.
\\ \hline
\textbf{Action}            & Check if the post exists in the database. If yes, removes it. else, returns an error message.
\\ \hline
\textbf{Output}            & The post is deleted successfully.
\\ \hline
\textbf{Precondition}           &   The post needed to be selected from the list.
\\ \hline
\textbf{Post-condition}           & Record is deleted from database.
\\ \hline
\textbf{Dependencies}           & FR03,FR15
\\ \hline
\end{tabular}
\end{table}

\FloatBarrier
\begin{table}[h]
\caption{ - }
\label{tab:my-table}
\begin{tabular}{|p{0.25\textwidth}|p{0.75\textwidth}|}
\hline
\textbf{Function:} & Delete comment.
\\ \hline
\textbf{ID}  & FR18           
\\ \hline
\textbf{Description}    & This function is for deleting a specific comment whether by the admin or the user.                                      
\\ \hline
\textbf{Type}    & Boolean      
\\ \hline
\textbf{Input}        & Comment ID to be deleted.
\\ \hline
\textbf{Action}            & Check if the comment exists in the database. If yes, removes it. else, returns an error message.
\\ \hline
\textbf{Output}            & The comment is deleted successfully.
\\ \hline
\textbf{Pre condition}           & The comment needed to be selected from the list. 
\\ \hline
\textbf{Post condition}           & Record is deleted from database.
\\ \hline
\textbf{Dependencies}           & FR03,FR09,FR15
\\ \hline
\end{tabular}
\end{table}

\FloatBarrier
\begin{table}[h]
\caption{ - }
\label{tab:my-table}
\begin{tabular}{|p{0.25\textwidth}|p{0.75\textwidth}|}
\hline
\textbf{Function:} & Logout.
\\ \hline
\textbf{ID}  & FR19
\\ \hline
\textbf{Description}    & This function is for all users to logout from their accounts              
\\ \hline
\textbf{Type}    &  void       
\\ \hline
\textbf{Input}        & User ID
\\ \hline
\textbf{Action}            & User logs out from the application.
\\ \hline
\textbf{Output}            & Logout from the account is done successfully. 
\\ \hline
\textbf{Pre condition}           & The user must login first. 
\\ \hline
\textbf{Post condition}           & Redirect to login page.
\\ \hline
\textbf{Dependencies}           & FR03
\\ \hline
\end{tabular}
\end{table}
\FloatBarrier

\clearpage
\section{Interface Requirements}
\bigskip
\subsection{User Interfaces}
\bigskip
\subsubsection {GUI}
\bigskip

\bigskip
\begin{figure}[h]
  \centering
  \begin{minipage}[b]{0.32\textwidth}
    \includegraphics[width=\textwidth]{21.jpeg}
    \caption{Introductory page}
  \end{minipage}
  \hfill
  \begin{minipage}[b]{0.32\textwidth}
    \includegraphics[width=\textwidth]{b.jpeg}
    \caption{Log in Page\cite{c}}
     
      \end{minipage}
  \begin{minipage}[b]{0.32\textwidth}
    \includegraphics[width=\textwidth]{c.jpeg}
    \caption{Sign Up}
  \end{minipage}
\end{figure}
\clearpage
\begin{figure}[h]

  \begin{minipage}[b]{0.5\textwidth}
    \includegraphics[width=5.0cm, height=10.0cm]{f.jpeg}
   \caption{Complete Profile}
  \end{minipage}
    \begin{minipage}[b]{0.5\textwidth}
    \includegraphics[width=5.0cm, height=10.0cm]{e.jpeg}
    \caption{Forget Password}
  \end{minipage}
      \begin{minipage}[b]{0.5\textwidth}

    \includegraphics[width=5.0cm, height=10.0cm]{d.jpeg}
    \caption{Reset Password}
  \end{minipage}
  \begin{minipage}[b]{0.5\textwidth}
    \includegraphics[width=5.0cm, height=10.0cm]{24.jpeg}
   \caption{editing profile\cite{b}}
  \end{minipage}
  
\label{label1}
\end{figure}
\FloatBarrier
 \begin{figure}[h]
 \subsubsection{Profile pages}
 \begin{minipage}{.5\textwidth}
  \includegraphics[width=5.0cm, height=10.0cm]{./g.jpeg}
   \caption{profile page\cite{d}}
 \end{minipage}
  \begin{minipage}{.5\textwidth}
  \includegraphics[width=5.0cm, height=10.0cm]{./h.jpeg}
  \caption{Drawer}
 \end{minipage}
   \begin{minipage}{.5\textwidth}
  \includegraphics[width=5.0cm, height=10.0cm]{./k.jpeg}
 \caption{main page}
 \end{minipage}
   \begin{minipage}{.5\textwidth}
  \includegraphics[width=5.0cm, height=10.0cm]{./i.jpeg}
  \caption{trending page}
 \end{minipage}

\end{figure}
\clearpage
\begin{figure}{}
   \begin{minipage}{.5\textwidth}
  \includegraphics[width=5.0cm, height=10.0cm]{j.png}
 \caption{one of the recipes page}
 \end{minipage}
 \begin{minipage}{.5\textwidth}
  \includegraphics[width=5.0cm, height=10.0cm]{./22.jpeg}
  \caption{search results}
 \end{minipage}
 \begin{minipage}{.5\textwidth}
  \includegraphics[width=5.0cm, height=10.0cm]{./i.jpeg}
  \caption{trending page}
  \end{minipage}
  \begin{minipage}{.5\textwidth}
  \includegraphics[width=5.0cm, height=10.0cm]{./23.jpeg}
  \caption{adding new recipe page}
  \end{minipage}
   

\end{figure}
\FloatBarrier
\newpage
\section{Design Constraints}
The system should be adaptable, to be viewed from different kinds of devices like tablets, laptops... etc. Also, we had a constrain with which the internet speed varies from one user to another. The Android SDK version required by the system is Android 11.0 (R). Moreover, camera sensors are needed for the user to easily post recipes of his choice. Some of the packages used in our system to assist with the quality of the UI include the like button package (version 1.0.4), the carousel pro package (version 1.0.0), and the simple animation package (version 1.3.3). Additionally, the Get package (version 3.21.2) is used to easily navigate through screens. Furthermore, the provider package (version 4.3.2+3) is utilized for effortless state management for our system.


\section{Other non-functional attributes}
\bigskip
\subsection {Security}
This system is provided with authentication without which no user can pass. So only the legitimate users are allowed to use the application. If the legitimate userâ€™s share the authentication information then the system is open to outsiders.
\bigskip

\subsection {Reliability}
Proper validations for user inputs will be applied to avoid incorrect storage of records or any invalid inputs.
\bigskip

\subsection {Maintainability}
The software system should be designed to be easily  maintained and improved by software developers so that helps a lot in maintaining the software system, and minimize the amount of changes that will be done in the code
\bigskip
\subsection {Portability}
This system is implemented using flutter cross platform that can be installed on any smart phone supporting android and IOS software.
\bigskip
\subsection {Usability}
Food studio application will be user friendly and easy to understand.The system consists if flexible and usable User interface.
\newpage
\section{Object Oriented Analysis}

\subsection{Class Diagram}
\begin{figure}[h]
  \begin{minipage}[b]{0.5\textwidth}
    \includegraphics[width=15.0cm, height=10.0cm]{FoodStudio classdiagram.png}
    \centering
    \caption {Class Diagram}
  \end{minipage}
\label{label1}
\end{figure}
\newpage
\subsection{Widget Tree}
\begin{figure}[h]
  \begin{minipage}[b]{0.5\textwidth}
    \includegraphics[width=15.0cm, height=10.0cm]{Widget Tree.png}
    \centering
    \caption {Widget Tree}
  \end{minipage}
\label{label1}
\end{figure}
\newpage
\subsection{Data Model}
\begin{figure}[!h]
\includegraphics[width=16cm \textwidth]{Data Model.png}
\caption{Data Model}
\end{figure}
\FloatBarrier




\section{Project Plan}



\begin{table}[h]
\resizebox{\textwidth}{60}
{\begin{tabular}{|l|l|l|l|}
\hline 
\thea{Start Date}    & \thead{End Date} & \thead{Task} & \thead{Team members}  \\
\hline
06-November-2020  & 17-November-2020 (frontend)  -  15-January-2021 (backend) & Login and recipe detail (one recipe) pages & Mariam \\ 
\hline
06-November-2020 & 17-November-2020 (frontend) - 15-January-2021 (backend)   & Forget password and search pages & Samiha \\ 
\hline
06-November-2020 & 17-November-2020 (frontend) - 15-January-2021 (backend)   & Trending and create profile pages & Sandra \\ 
\hline
06-November-2020 & 17-November-2020 (frontend) - 15-January-2021 (backend)   & Main page (view all recipes) and create account & Nour \\ 
\hline
10-November-2020  & 17-November-2020 (frontend) - 15-January-2021 (backend)  & Add new post, edit profile, reset password & Samiha   \\
\hline
10-November-2020  & 17-November-2020 (frontend) - 15-January-2021 (backend)   & Intro page and detail page (slider page and welcome page) & Nour
\\
\hline
10-November-2020  & 17-November-2020 (frontend) - 15-January-2021 (backend)   & User profile and drawer & Sandra
\\
\hline
17-November-2020 & 05-December-2020 (frontend) - 15-January-2021 (backend)  & Saved and logout pages & Nour \\ \hline
\end{tabular}}


\caption{Project plan}
\end{table}


\FloatBarrier

\newpage
\section{Github Contribution}
\begin{figure}[!h]
\includegraphics[width=13cm]{Screenshot (329).png}
\caption{Github Contribution}
\end{figure}
\FloatBarrier

\section {References}

\bibliographystyle{IEEEtran}

\bibliography{ref.bib}

\end{document}
